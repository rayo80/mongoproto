# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zenbus.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0czenbus.proto\x12\x0fzenbus_realtime\"\xe0\x01\n\x0bLiveMessage\x12-\n\ttimetable\x18\x01 \x03(\x0b\x32\x1a.zenbus_realtime.Timetable\x12/\n\ntripColumn\x18\x02 \x03(\x0b\x32\x1b.zenbus_realtime.TripColumn\x12\x18\n\x10start_processing\x18\x03 \x01(\x03\x12\x16\n\x0e\x65nd_processing\x18\x04 \x01(\x03\x12\x0f\n\x07version\x18\x05 \x01(\x03\x12.\n\x08messages\x18\x06 \x03(\x0b\x32\x1c.zenbus_realtime.WallMessage\"\xca\x02\n\rStaticMessage\x12#\n\x04line\x18\x01 \x03(\x0b\x32\x15.zenbus_realtime.Line\x12-\n\titinerary\x18\x02 \x03(\x0b\x32\x1a.zenbus_realtime.Itinerary\x12%\n\x05shape\x18\x03 \x03(\x0b\x32\x16.zenbus_realtime.Shape\x12)\n\x07mission\x18\x04 \x03(\x0b\x32\x18.zenbus_realtime.Mission\x12#\n\x04stop\x18\x05 \x03(\x0b\x32\x15.zenbus_realtime.Stop\x12\x0f\n\x07version\x18\x06 \x01(\x03\x12\x18\n\x10start_processing\x18\x07 \x01(\x03\x12\x16\n\x0e\x65nd_processing\x18\x08 \x01(\x03\x12+\n\x08resource\x18\t \x01(\x0b\x32\x19.zenbus_realtime.Resource\"\xbe\x01\n\x15StopMonitoringMessage\x12/\n\ntripColumn\x18\x01 \x03(\x0b\x32\x1b.zenbus_realtime.TripColumn\x12,\n\x06\x61nchor\x18\x02 \x03(\x0b\x32\x1c.zenbus_realtime.Stop.Anchor\x12#\n\x04stop\x18\x03 \x01(\x0b\x32\x15.zenbus_realtime.Stop\x12\x10\n\x08midnight\x18\x04 \x01(\x03\x12\x0f\n\x07version\x18\x05 \x01(\x03\"\xd0\x05\n#PassengerInformationTerminalMessage\x12U\n\nmap_config\x18\x01 \x01(\x0b\x32\x41.zenbus_realtime.PassengerInformationTerminalMessage.PITMapConfig\x12]\n\x0e\x64isplay_config\x18\x02 \x01(\x0b\x32\x45.zenbus_realtime.PassengerInformationTerminalMessage.PITDisplayConfig\x12-\n\x04stop\x18\x03 \x03(\x0b\x32\x1f.zenbus_realtime.Stop.Reference\x12-\n\x04line\x18\x04 \x03(\x0b\x32\x1f.zenbus_realtime.Line.Reference\x12\x0f\n\x07version\x18\x05 \x01(\x03\x1a\x9a\x01\n\x0cPITMapConfig\x12.\n\x0eterminalCoords\x18\x01 \x01(\x0b\x32\x16.zenbus_realtime.Point\x12)\n\tmapCenter\x18\x03 \x01(\x0b\x32\x16.zenbus_realtime.Point\x12\x0f\n\x07mapZoom\x18\x04 \x01(\x05\x12\x1e\n\x16\x66ullProgressBarMinutes\x18\x07 \x01(\x05\x1a\xe6\x01\n\x10PITDisplayConfig\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tignoreEta\x18\x02 \x01(\x08\x12\x10\n\x08useMiles\x18\x03 \x01(\x08\x12 \n\x18switchBetweenStopSeconds\x18\x04 \x01(\x05\x12\x17\n\x0f\x61\x63tiveStartTime\x18\x05 \x01(\x05\x12\x15\n\ractiveEndTime\x18\x06 \x01(\x05\x12\r\n\x05logos\x18\x07 \x03(\t\x12\x0f\n\x07\x63ssPath\x18\x08 \x01(\t\x12\x16\n\x0e\x61utoReloadTime\x18\t \x01(\x05\x12\x15\n\rforceReloadAt\x18\n \x01(\x03\"\xa3\x02\n\x11\x44iagnosticMessage\x12/\n\ntripColumn\x18\x01 \x01(\x0b\x32\x1b.zenbus_realtime.TripColumn\x12+\n\x08provider\x18\x02 \x03(\x0b\x32\x19.zenbus_realtime.Provider\x12-\n\ttimetable\x18\x03 \x03(\x0b\x32\x1a.zenbus_realtime.Timetable\x12\x33\n\x0bstatic_data\x18\x04 \x01(\x0b\x32\x1e.zenbus_realtime.StaticMessage\x12\x0f\n\x07version\x18\x05 \x01(\x03\x12;\n\x08resolved\x18\x06 \x03(\x0b\x32).zenbus_realtime.ResolvedDeclarationEvent\"\x84\x01\n\x0cWallMessages\x12.\n\x08messages\x18\x01 \x03(\x0b\x32\x1c.zenbus_realtime.WallMessage\x12\x33\n\x07\x61uthors\x18\x02 \x03(\x0b\x32\".zenbus_realtime.WallMessageAuthor\x12\x0f\n\x07version\x18\x03 \x01(\x03\"\xc5\x02\n\x12SingleProviderPost\x12!\n\x03pos\x18\x01 \x03(\x0b\x32\x14.zenbus_realtime.Pos\x12-\n\x08provider\x18\x02 \x01(\x0b\x32\x19.zenbus_realtime.ProviderH\x00\x12\x15\n\x0bprovider_id\x18\x03 \x01(\x03H\x00\x12+\n\x07vehicle\x18\x04 \x01(\x0b\x32\x18.zenbus_realtime.VehicleH\x01\x12\x14\n\nvehicle_id\x18\x05 \x01(\x03H\x01\x12\x36\n\x0b\x64\x65\x63laration\x18\x06 \x01(\x0b\x32!.zenbus_realtime.DeclarationEvent\x12(\n\x05\x63ount\x18\x07 \x03(\x0b\x32\x19.zenbus_realtime.StopTimeB\x10\n\x0eprovider_oneofB\x0f\n\rvehicle_oneof\"\xab\x01\n\x0e\x44\x61ilyStopTimes\x12\x30\n\x0btrip_column\x18\x01 \x03(\x0b\x32\x1b.zenbus_realtime.TripColumn\x12\x36\n\x0estatic_message\x18\x02 \x01(\x0b\x32\x1e.zenbus_realtime.StaticMessage\x12/\n\x08vehicles\x18\x03 \x03(\x0b\x32\x1d.zenbus_realtime.AboutVehicle\"\xb6\x01\n\x0c\x41\x62outVehicle\x12+\n\x07vehicle\x18\x01 \x01(\x0b\x32\x18.zenbus_realtime.VehicleH\x00\x12\x14\n\nvehicle_id\x18\x02 \x01(\x03H\x00\x12!\n\x03pos\x18\x03 \x03(\x0b\x32\x14.zenbus_realtime.Pos\x12/\n\ntripColumn\x18\x04 \x03(\x0b\x32\x1b.zenbus_realtime.TripColumnB\x0f\n\rvehicle_oneof\",\n\x05Point\x12\x10\n\x08latitude\x18\x01 \x01(\x02\x12\x11\n\tlongitude\x18\x02 \x01(\x02\"\xf0\x01\n\x03Pos\x12\x10\n\x08latitude\x18\x01 \x01(\x02\x12\x11\n\tlongitude\x18\x02 \x01(\x02\x12 \n\x16seconds_after_midnight\x18\x03 \x01(\x05H\x00\x12\x14\n\nutc_millis\x18\x04 \x01(\x03H\x00\x12\x15\n\x0bprovider_id\x18\x05 \x01(\x03H\x01\x12-\n\x08provider\x18\x06 \x01(\x0b\x32\x19.zenbus_realtime.ProviderH\x01\x12\x10\n\x08\x61\x63\x63uracy\x18\x07 \x01(\x02\x12\x0f\n\x07heading\x18\x08 \x01(\x02\x42\x11\n\x0ftimestamp_oneofB\x10\n\x0eprovider_oneof\"\x9b\x03\n\x07Vehicle\x12\x12\n\nvehicle_id\x18\x01 \x01(\x03\x12\x30\n\x0cvehicle_type\x18\x02 \x01(\x0e\x32\x1a.zenbus_realtime.Line.Type\x12\x15\n\rlicense_plate\x18\x03 \x01(\t\x12\r\n\x05label\x18\x04 \x01(\t\x12\x0e\n\x06\x64river\x18\x05 \x01(\t\x12\x18\n\x10\x64river_timestamp\x18\x06 \x01(\x03\x12\x1a\n\x12passenger_capacity\x18\x07 \x01(\x05\x12\x13\n\x08\x62lock_id\x18\xec\x07 \x01(\x03H\x00\x12(\n\x05\x62lock\x18\xed\x07 \x01(\x0b\x32\x16.zenbus_realtime.BlockH\x00\x12\'\n\x06\x62locks\x18\xee\x07 \x03(\x0b\x32\x16.zenbus_realtime.Block\x1a_\n\tReference\x12\x14\n\nvehicle_id\x18\x01 \x01(\x03H\x00\x12+\n\x07vehicle\x18\x02 \x01(\x0b\x32\x18.zenbus_realtime.VehicleH\x00\x42\x0f\n\rvehicle_oneofB\x15\n\x13\x63urrent_block_oneof\"\x85\x01\n\x05\x42lock\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x03\x12+\n\x06\x61\x63tual\x18\x02 \x03(\x0b\x32\x1b.zenbus_realtime.TripColumn\x12)\n\x04rule\x18\x03 \x03(\x0b\x32\x1b.zenbus_realtime.TripColumn\x12\x12\n\nblock_name\x18\x04 \x01(\t\"\xf8\x04\n\x08Provider\x12\x13\n\x0bprovider_id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x64\x65viceId\x18\x03 \x03(\t\x12\x0e\n\x06source\x18\x04 \x03(\t\x12,\n\x04type\x18\x05 \x01(\x0e\x32\x1e.zenbus_realtime.Provider.Type\x12/\n\x06\x63onfig\x18\x06 \x01(\x0b\x32\x1f.zenbus_realtime.ProviderConfig\x12\x31\n\x07\x62\x61ttery\x18\x07 \x03(\x0b\x32 .zenbus_realtime.ProviderBattery\x12-\n\x05\x65vent\x18\n \x03(\x0b\x32\x1e.zenbus_realtime.ProviderEvent\x12\x31\n\x07latency\x18\x65 \x01(\x0b\x32 .zenbus_realtime.ProviderLatency\x12\x13\n\x0bremote_addr\x18\x66 \x01(\t\x12\r\n\x05owner\x18g \x01(\x03\x1a\x63\n\tReference\x12\x15\n\x0bprovider_id\x18\x08 \x01(\x03H\x00\x12-\n\x08provider\x18\t \x01(\x0b\x32\x19.zenbus_realtime.ProviderH\x00\x42\x10\n\x0eprovider_oneof\"\xa9\x01\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x16\n\x12ZENBUS_ANDROID_APP\x10\x01\x12\t\n\x05\x43\x41PTE\x10\x02\x12\x0c\n\x08VENTRATA\x10\x03\x12\x07\n\x03UBI\x10\x04\x12\t\n\x05HUBUP\x10\x05\x12\n\n\x06TRAXGO\x10\x06\x12\x0b\n\x07OOCLOCK\x10\x07\x12\n\n\x06REUNIR\x10\x08\x12\r\n\tWEBREATHE\x10\t\x12\x0c\n\x08\x41GILTECH\x10\n\x12\r\n\tPILOTFISH\x10\x0b\"~\n\x0fProviderBattery\x12 \n\x16seconds_after_midnight\x18\x01 \x01(\x05H\x00\x12\x14\n\nutc_millis\x18\x02 \x01(\x03H\x00\x12\x0f\n\x07percent\x18\x03 \x01(\x05\x12\x0f\n\x07plugged\x18\x04 \x01(\x08\x42\x11\n\x0ftimestamp_oneof\"\xbb\x01\n\x0eProviderConfig\x12\x17\n\x0f\x61ndroid_version\x18\x01 \x01(\t\x12\x13\n\x0b\x61pp_version\x18\x02 \x01(\t\x12\x11\n\tdoze_mode\x18\x03 \x01(\x08\x12\x11\n\twifi_scan\x18\x04 \x01(\x08\x12\x15\n\rstart_on_boot\x18\x05 \x01(\x08\x12\x15\n\rstart_on_alim\x18\x06 \x01(\x08\x12\x10\n\x08low_batt\x18\x07 \x01(\x05\x12\x15\n\rreadonly_mode\x18\x08 \x01(\x08\"v\n\rProviderEvent\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12 \n\x16seconds_after_midnight\x18\x02 \x01(\x05H\x00\x12\x14\n\nutc_millis\x18\x03 \x01(\x03H\x00\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\tB\x11\n\x0ftimestamp_oneof\"\xc9\x02\n\x0fProviderLatency\x12\x0f\n\x07\x61pi_key\x18\x01 \x03(\t\x12\x10\n\x08midnight\x18\x02 \x01(\x05\x12\x39\n\x07latency\x18\x03 \x03(\x0b\x32(.zenbus_realtime.ProviderLatency.Latency\x1a\xd7\x01\n\x07Latency\x12\x15\n\rapi_key_index\x18\x01 \x01(\x05\x12\x14\n\x0clast_pos_src\x18\x02 \x01(\x05\x12\x10\n\x08src_mask\x18\x03 \x01(\x05\x12\r\n\x05n_pos\x18\x04 \x01(\x05\x12 \n\x16seconds_after_midnight\x18\x05 \x01(\x05H\x00\x12\x1f\n\x15millis_after_midnight\x18\x06 \x01(\x05H\x00\x12\x13\n\x0bmin_latency\x18\x07 \x01(\x05\x12\x13\n\x0bmax_latency\x18\x08 \x01(\x05\x42\x11\n\x0flocaltime_oneof\"\xc4\x07\n\x04Stop\x12\x0f\n\x07stop_id\x18\x01 \x01(\x03\x12&\n\x06\x63\x65nter\x18\x02 \x01(\x0b\x32\x16.zenbus_realtime.Point\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0c\n\x04\x63ode\x18\x04 \x01(\t\x12\x13\n\tparent_id\x18\x05 \x01(\x03H\x00\x12\'\n\x06parent\x18\x06 \x01(\x0b\x32\x15.zenbus_realtime.StopH\x00\x12\x31\n\rlocation_type\x18\x07 \x01(\x0e\x32\x1a.zenbus_realtime.Stop.Type\x12\x45\n\x13wheelchair_boarding\x18\x08 \x01(\x0e\x32(.zenbus_realtime.Stop.WheelchairBoarding\x12\x13\n\x0b\x64\x65scription\x18\x64 \x01(\t\x12\x1a\n\x12\x64isplay_short_name\x18\x65 \x01(\t\x12\x19\n\x11\x64isplay_long_name\x18\x66 \x01(\t\x12#\n\x02ne\x18\xc8\x01 \x01(\x0b\x32\x16.zenbus_realtime.Point\x12#\n\x02sw\x18\xc9\x01 \x01(\x0b\x32\x16.zenbus_realtime.Point\x12\x16\n\rstart_of_trip\x18\xca\x01 \x01(\x08\x12\x14\n\x0b\x65nd_of_trip\x18\xcb\x01 \x01(\x08\x1aS\n\tReference\x12\x11\n\x07stop_id\x18\x01 \x01(\x03H\x00\x12%\n\x04stop\x18\x02 \x01(\x0b\x32\x15.zenbus_realtime.StopH\x00\x42\x0c\n\nstop_oneof\x1a\xda\x01\n\x06\x41nchor\x12\x11\n\x07stop_id\x18\x01 \x01(\x03H\x00\x12%\n\x04stop\x18\x02 \x01(\x0b\x32\x15.zenbus_realtime.StopH\x00\x12\x1a\n\x12\x64istance_travelled\x18\x03 \x01(\x05\x12\x1f\n\x17stop_index_in_itinerary\x18\x04 \x01(\x05\x12\x12\n\nstop_index\x18\x05 \x01(\x05\x12\x37\n\titinerary\x18\x06 \x01(\x0b\x32$.zenbus_realtime.Itinerary.ReferenceB\x0c\n\nstop_oneof\"d\n\x04Type\x12\x14\n\x10STOP_OR_PLATFORM\x10\x00\x12\x0b\n\x07STATION\x10\x01\x12\x14\n\x10\x45NTRANCE_OR_EXIT\x10\x02\x12\x10\n\x0cGENERIC_NODE\x10\x03\x12\x11\n\rBOARDING_AREA\x10\x04\"C\n\x12WheelchairBoarding\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0e\n\nACCESSIBLE\x10\x01\x12\x10\n\x0cINACCESSIBLE\x10\x02\x42\x0e\n\x0cparent_oneof\"\xd8\x02\n\x07Mission\x12\x12\n\nmission_id\x18\x01 \x01(\x03\x12\x12\n\x08shape_id\x18\x02 \x01(\x03H\x00\x12\'\n\x05shape\x18\x03 \x01(\x0b\x32\x16.zenbus_realtime.ShapeH\x00\x12\x16\n\x0citinerary_id\x18\x04 \x01(\x03H\x00\x12/\n\titinerary\x18\x05 \x01(\x0b\x32\x1a.zenbus_realtime.ItineraryH\x00\x12,\n\x06\x61nchor\x18\x06 \x03(\x0b\x32\x1c.zenbus_realtime.Stop.Anchor\x12\x15\n\rtrip_headsign\x18\x07 \x01(\t\x1a_\n\tReference\x12\x14\n\nmission_id\x18\x01 \x01(\x03H\x00\x12+\n\x07mission\x18\x02 \x01(\x0b\x32\x18.zenbus_realtime.MissionH\x00\x42\x0f\n\rmission_oneofB\r\n\x0bshape_oneof\"\xe8\x03\n\x05Shape\x12\x10\n\x08shape_id\x18\x01 \x01(\x03\x12\x16\n\x0citinerary_id\x18\x02 \x01(\x03H\x00\x12/\n\titinerary\x18\x03 \x01(\x0b\x32\x1a.zenbus_realtime.ItineraryH\x00\x12,\n\x06\x61nchor\x18\x05 \x03(\x0b\x32\x1c.zenbus_realtime.Stop.Anchor\x12/\n\x06points\x18\x06 \x01(\x0b\x32\x1d.zenbus_realtime.Shape.PointsH\x01\x12\x33\n\x08segments\x18\x07 \x01(\x0b\x32\x1f.zenbus_realtime.Shape.SegmentsH\x01\x1aW\n\tReference\x12\x12\n\x08shape_id\x18\x01 \x01(\x03H\x00\x12\'\n\x05shape\x18\x02 \x01(\x0b\x32\x16.zenbus_realtime.ShapeH\x00\x42\r\n\x0bshape_oneof\x1a\x45\n\x08Segments\x12\x39\n\x0fshape_reference\x18\x01 \x03(\x0b\x32 .zenbus_realtime.Shape.Reference\x1a/\n\x06Points\x12%\n\x05point\x18\x01 \x03(\x0b\x32\x16.zenbus_realtime.PointB\x11\n\x0fitinerary_oneofB\x0c\n\npath_oneof\"\x93\x02\n\tItinerary\x12\x14\n\x0citinerary_id\x18\x01 \x01(\x03\x12\x11\n\x07line_id\x18\x02 \x01(\x03H\x00\x12%\n\x04line\x18\x03 \x01(\x0b\x32\x15.zenbus_realtime.LineH\x00\x12\x31\n\x08stop_ref\x18\x04 \x03(\x0b\x32\x1f.zenbus_realtime.Stop.Reference\x12\x0c\n\x04name\x18\x05 \x01(\t\x1ag\n\tReference\x12\x16\n\x0citinerary_id\x18\x01 \x01(\x03H\x00\x12/\n\titinerary\x18\x02 \x01(\x0b\x32\x1a.zenbus_realtime.ItineraryH\x00\x42\x11\n\x0fitinerary_oneofB\x0c\n\nline_oneof\"\x98\x03\n\x04Line\x12\x0f\n\x07line_id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x65sc\x18\x03 \x01(\t\x12\x0c\n\x04\x63ode\x18\x04 \x01(\t\x12\x1a\n\x12\x64isplay_short_name\x18\x05 \x01(\t\x12\x19\n\x11\x64isplay_long_name\x18\x06 \x01(\t\x12\r\n\x05\x63olor\x18\x07 \x01(\t\x12\x11\n\ttextColor\x18\x08 \x01(\t\x12(\n\x04type\x18\t \x01(\x0e\x32\x1a.zenbus_realtime.Line.Type\x12\x18\n\x10route_sort_order\x18\n \x01(\x05\x1aS\n\tReference\x12\x11\n\x07line_id\x18\x02 \x01(\x03H\x00\x12%\n\x04line\x18\x03 \x01(\x0b\x32\x15.zenbus_realtime.LineH\x00\x42\x0c\n\nline_oneof\"c\n\x04Type\x12\x08\n\x04TRAM\x10\x00\x12\t\n\x05METRO\x10\x01\x12\x08\n\x04RAIL\x10\x02\x12\x07\n\x03\x42US\x10\x03\x12\t\n\x05\x46\x45RRY\x10\x04\x12\x0c\n\x08\x43\x41\x42LECAR\x10\x05\x12\x0b\n\x07GONDOLA\x10\x06\x12\r\n\tFUNICULAR\x10\x07\"#\n\x0f\x43\x61lendarPattern\x12\x10\n\x08yyyymmdd\x18\x01 \x03(\x05\"\x9a\x02\n\tTimetable\x12\x14\n\x0ctimetable_id\x18\x01 \x01(\x03\x12\x16\n\x0citinerary_id\x18\x02 \x01(\x03H\x00\x12/\n\titinerary\x18\x03 \x01(\x0b\x32\x1a.zenbus_realtime.ItineraryH\x00\x12\x12\n\x08yyyymmdd\x18\x04 \x01(\x05H\x01\x12\x36\n\ncalPattern\x18\x05 \x01(\x0b\x32 .zenbus_realtime.CalendarPatternH\x01\x12\x10\n\x08midnight\x18\x06 \x01(\x03\x12+\n\x06\x63olumn\x18\x07 \x03(\x0b\x32\x1b.zenbus_realtime.TripColumnB\x11\n\x0fitinerary_oneofB\x10\n\x0eyyyymmdd_oneof\"2\n\nCountGroup\x12\x16\n\x0e\x63ount_group_id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\"\xb6\x0b\n\x08StopTime\x12!\n\x17stop_index_in_itinerary\x18\x01 \x01(\x05H\x00\x12\x39\n\x11stop_in_itinerary\x18\x02 \x01(\x0b\x32\x1c.zenbus_realtime.Stop.AnchorH\x00\x12\x1f\n\x15stop_index_in_mission\x18\x03 \x01(\x05H\x01\x12\x37\n\x0fstop_in_mission\x18\x04 \x01(\x0b\x32\x1c.zenbus_realtime.Stop.AnchorH\x01\x12\x0f\n\x07\x61rrival\x18\x05 \x01(\x05\x12\x11\n\tdeparture\x18\x06 \x01(\x05\x12\x13\n\x0b\x61rriparture\x18\x07 \x01(\x05\x12\x1b\n\x13\x61\x63tual_time_at_stop\x18\x08 \x01(\x05\x12\x41\n\x0fpassenger_total\x18\r \x01(\x0b\x32(.zenbus_realtime.StopTime.PassengerTotal\x12\x10\n\x08group_id\x18\x0e \x03(\x03\x12\x39\n\x0b\x63ountEvents\x18\x1e \x03(\x0b\x32$.zenbus_realtime.StopTime.CountEvent\x12\x42\n\x0foccupancyStatus\x18\x0f \x01(\x0e\x32).zenbus_realtime.StopTime.OccupancyStatus\x12\x15\n\rtrip_headsign\x18\x64 \x01(\t\x12\x30\n\x0btrip_column\x18\x10 \x01(\x0b\x32\x1b.zenbus_realtime.TripColumn\x12\x0f\n\x07no_time\x18\x11 \x01(\x08\x12 \n\x16seconds_after_midnight\x18n \x01(\x05H\x02\x12\x14\n\nutc_millis\x18o \x01(\x03H\x02\x1a\x8e\x03\n\nCountEvent\x12U\n\x13passengers_boarding\x18\x01 \x01(\x0b\x32\x36.zenbus_realtime.StopTime.PassengersBoardingAndLeavingH\x00\x12T\n\x12passengers_leaving\x18\x02 \x01(\x0b\x32\x36.zenbus_realtime.StopTime.PassengersBoardingAndLeavingH\x00\x12\x61\n\x1fpassengers_boarding_and_leaving\x18\x03 \x01(\x0b\x32\x36.zenbus_realtime.StopTime.PassengersBoardingAndLeavingH\x00\x12\x18\n\x0e\x63ount_group_id\x18\x04 \x01(\x03H\x01\x12\x32\n\x0b\x63ount_group\x18\x05 \x01(\x0b\x32\x1b.zenbus_realtime.CountGroupH\x01\x42\r\n\x0b\x63ount_oneofB\x13\n\x11\x63ount_group_oneof\x1aW\n\x1cPassengersBoardingAndLeaving\x12\x1b\n\x13passengers_boarding\x18\x01 \x01(\x05\x12\x1a\n\x12passengers_leaving\x18\x02 \x01(\x05\x1a\x46\n\x0ePassengerTotal\x12\x18\n\x10total_passengers\x18\x01 \x01(\x05\x12\x1a\n\x12passengers_percent\x18\x02 \x01(\x05\"\xbc\x01\n\x0fOccupancyStatus\x12\x0b\n\x07UNKNOWN\x10\x00\x12\t\n\x05\x45MPTY\x10\x01\x12\x18\n\x14MANY_SEATS_AVAILABLE\x10\x02\x12\x17\n\x13\x46\x45W_SEATS_AVAILABLE\x10\x03\x12\x16\n\x12STANDING_ROOM_ONLY\x10\x04\x12\x1e\n\x1a\x43RUSHED_STANDING_ROOM_ONLY\x10\x05\x12\x08\n\x04\x46ULL\x10\x06\x12\x1c\n\x18NOT_ACCEPTING_PASSENGERS\x10\x07\x42\x19\n\x17stop_in_itinerary_oneofB\x17\n\x15stop_in_mission_oneofB\x11\n\x0ftimestamp_oneof\"\x9c\x06\n\tTripEvent\x12-\n\x04what\x18\x01 \x01(\x0e\x32\x1f.zenbus_realtime.TripEvent.Type\x12\x10\n\x08yyyymmdd\x18\x02 \x01(\x05\x12\x10\n\x08midnight\x18\x03 \x01(\x03\x12\t\n\x01t\x18\x04 \x01(\x05\x12#\n\x1bprevious_index_in_itinerary\x18\x05 \x01(\x05\x12!\n\x19previous_index_in_mission\x18\x06 \x01(\x05\x12!\n\x19target_index_in_itinerary\x18\x07 \x01(\x05\x12\x1f\n\x17target_index_in_mission\x18\x08 \x01(\x05\x12!\n\x03pos\x18\t \x01(\x0b\x32\x14.zenbus_realtime.Pos\x12)\n\x04trip\x18\n \x01(\x0b\x32\x1b.zenbus_realtime.TripColumn\x12\x15\n\x0bprovider_id\x18\x0b \x01(\x05H\x00\x12-\n\x08provider\x18\x0c \x01(\x0b\x32\x19.zenbus_realtime.ProviderH\x00\x12\x14\n\nmission_id\x18\x66 \x01(\x03H\x01\x12+\n\x07mission\x18g \x01(\x0b\x32\x18.zenbus_realtime.MissionH\x01\x12\x12\n\x08shape_id\x18h \x01(\x03H\x02\x12\'\n\x05shape\x18i \x01(\x0b\x32\x16.zenbus_realtime.ShapeH\x02\x12\x16\n\x0citinerary_id\x18j \x01(\x03H\x03\x12/\n\titinerary\x18k \x01(\x0b\x32\x1a.zenbus_realtime.ItineraryH\x03\x12\x11\n\x07line_id\x18l \x01(\x03H\x04\x12%\n\x04line\x18m \x01(\x0b\x32\x15.zenbus_realtime.LineH\x04\x12\r\n\x04\x64\x65sc\x18\xc8\x01 \x01(\t\",\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07RELEASE\x10\x01\x12\n\n\x06\x41SSIGN\x10\x02\x42\x10\n\x0eprovider_oneofB\x0f\n\rmission_oneofB\r\n\x0bshape_oneofB\x11\n\x0fitinerary_oneofB\x0c\n\nline_oneof\"\xd1\x07\n\x10\x44\x65\x63larationEvent\x12\x13\n\ttimestamp\x18\x01 \x01(\x03H\x00\x12 \n\x16seconds_after_midnight\x18\x0b \x01(\x05H\x00\x12\x14\n\nstart_auto\x18\x02 \x01(\x08H\x01\x12\x18\n\x0estart_deadhead\x18\x03 \x01(\x08H\x01\x12\x11\n\ttrip_only\x18\x04 \x01(\x08\x12,\n$unintended_deadhead_on_fallback_fail\x18\x05 \x01(\x08\x12\x1e\n\x16\x61llow_trip_not_started\x18\x06 \x01(\x08\x12\x18\n\x10trip_not_started\x18\x07 \x01(\x08\x12\x16\n\x0etrip_not_ended\x18\x08 \x01(\x08\x12\x10\n\x08\x62lock_id\x18\x64 \x01(\x03\x12\x11\n\x07line_id\x18\x65 \x01(\x03H\x02\x12%\n\x04line\x18\x66 \x01(\x0b\x32\x15.zenbus_realtime.LineH\x02\x12\x16\n\x0c\x66\x65\x65\x64_line_id\x18g \x01(\tH\x02\x12\x16\n\x0citinerary_id\x18h \x01(\x03H\x03\x12/\n\titinerary\x18i \x01(\x0b\x32\x1a.zenbus_realtime.ItineraryH\x03\x12\x16\n\x0ctimetable_id\x18j \x01(\x03H\x03\x12/\n\ttimetable\x18k \x01(\x0b\x32\x1a.zenbus_realtime.TimetableH\x03\x12\x14\n\nmission_id\x18l \x01(\x03H\x04\x12+\n\x07mission\x18m \x01(\x0b\x32\x18.zenbus_realtime.MissionH\x04\x12\x19\n\x0f\x66\x65\x65\x64_mission_id\x18n \x01(\tH\x04\x12\x1f\n\x17\x66\x65\x65\x64_trip_headsign_code\x18o \x01(\t\x12\x16\n\x0c\x66\x65\x65\x64_trip_id\x18p \x01(\tH\x05\x12\x15\n\x0b\x61imed_index\x18q \x01(\x05H\x05\x12$\n\x1a\x66\x65\x65\x64_planning_workspace_id\x18r \x01(\x03H\x06\x12\x16\n\x0c\x66\x65\x65\x64_dataset\x18s \x01(\tH\x06\x12\x14\n\x0c\x66\x65\x65\x64_version\x18t \x01(\t\x12\x0e\n\x06\x64river\x18u \x01(\tB\x11\n\x0ftimestamp_oneofB\x16\n\x14start_end_trip_oneofB\x0c\n\nline_oneofB$\n\"itinerary_x_day_or_timetable_oneofB\x0f\n\rmission_oneofB \n\x1e\x66\x65\x65\x64_trip_or_aimed_index_oneofB)\n\'feed_planning_workspace_or_feed_dataset\"\xdb\x03\n\x18ResolvedDeclarationEvent\x12>\n\x05state\x18\x01 \x01(\x0e\x32/.zenbus_realtime.ResolvedDeclarationEvent.State\x12\x13\n\ttimestamp\x18\x02 \x01(\x03H\x00\x12 \n\x16seconds_after_midnight\x18\x15 \x01(\x05H\x00\x12\x33\n\x08resolved\x18\x03 \x01(\x0b\x32!.zenbus_realtime.DeclarationEvent\x12.\n\x03src\x18\x04 \x01(\x0b\x32!.zenbus_realtime.DeclarationEvent\"\xcf\x01\n\x05State\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x15\n\x11NEEDS_TRANSLATION\x10\x01\x12\x14\n\x10NEEDS_RESOLUTION\x10\x02\x12\x11\n\rTRIP_RESOLVED\x10\x03\x12\x13\n\x0f\x41UTO_RESTRICTED\x10\x04\x12\x0c\n\x08\x44\x45\x41\x44HEAD\x10\x05\x12\x08\n\x04\x41UTO\x10\x06\x12\x1e\n\x1aUNINTENDED_AUTO_RESTRICTED\x10\x07\x12\x17\n\x13UNINTENDED_DEADHEAD\x10\x08\x12\x13\n\x0fUNINTENDED_AUTO\x10\tB\x11\n\x0ftimestamp_oneof\"\xf7\x0f\n\nTripColumn\x12(\n\x05\x61imed\x18\x01 \x03(\x0b\x32\x19.zenbus_realtime.StopTime\x12#\n\x1bprevious_index_in_itinerary\x18\x02 \x01(\x05\x12!\n\x19target_index_in_itinerary\x18\x03 \x01(\x05\x12.\n\x0b\x65stimactual\x18\x04 \x03(\x0b\x32\x19.zenbus_realtime.StopTime\x12!\n\x03pos\x18\x05 \x03(\x0b\x32\x14.zenbus_realtime.Pos\x12,\n\x02id\x18\x06 \x01(\x0b\x32\x1e.zenbus_realtime.TripColumn.IdH\x00\x12\x13\n\tcol_index\x18\x07 \x01(\x05H\x00\x12\x12\n\x08yyyymmdd\x18\x08 \x01(\x05H\x01\x12\x36\n\ncalPattern\x18\t \x01(\x0b\x32 .zenbus_realtime.CalendarPatternH\x01\x12\x16\n\x0citinerary_id\x18\n \x01(\x03H\x02\x12/\n\titinerary\x18\x0b \x01(\x0b\x32\x1a.zenbus_realtime.ItineraryH\x02\x12\x14\n\nvehicle_id\x18\x0c \x01(\x03H\x03\x12+\n\x07vehicle\x18\r \x01(\x0b\x32\x18.zenbus_realtime.VehicleH\x03\x12\x62\n%jtfs_schedule_relationship_descriptor\x18\x0e \x01(\x0e\x32\x33.zenbus_realtime.JtfsScheduleRelationshipDescriptor\x12\x30\n\x0btrip_status\x18\x0f \x01(\x0e\x32\x1b.zenbus_realtime.TripStatus\x12;\n\x0btrip_nature\x18\x13 \x01(\x0e\x32&.zenbus_realtime.TripColumn.TripNature\x12\x17\n\x0ftrip_short_name\x18\x10 \x01(\t\x12\x15\n\rtrip_headsign\x18\x11 \x01(\t\x12-\n\tfrequency\x18\x12 \x01(\x0b\x32\x1a.zenbus_realtime.Frequency\x12\x15\n\rbestiary_code\x18\x14 \x01(\t\x12\x16\n\x0ctimetable_id\x18\x64 \x01(\x03H\x04\x12/\n\ttimetable\x18\x65 \x01(\x0b\x32\x1a.zenbus_realtime.TimetableH\x04\x12\x12\n\x08shape_id\x18\x66 \x01(\x03H\x05\x12\'\n\x05shape\x18g \x01(\x0b\x32\x16.zenbus_realtime.ShapeH\x05\x12\x11\n\x07line_id\x18h \x01(\x03H\x06\x12%\n\x04line\x18i \x01(\x0b\x32\x15.zenbus_realtime.LineH\x06\x12\x10\n\x08midnight\x18j \x01(\x03\x12-\n\x08timeline\x18\xc8\x01 \x03(\x0b\x32\x1a.zenbus_realtime.TripEvent\x12\x37\n\tdeclaring\x18\xc9\x01 \x01(\x0b\x32!.zenbus_realtime.DeclarationEventH\x07\x12>\n\x08resolved\x18\xca\x01 \x01(\x0b\x32).zenbus_realtime.ResolvedDeclarationEventH\x07\x12\"\n\x19previous_index_in_mission\x18\xe8\x07 \x01(\x05\x12 \n\x17target_index_in_mission\x18\xe9\x07 \x01(\x05\x12\x15\n\nmission_id\x18\xea\x07 \x01(\x03H\x08\x12,\n\x07mission\x18\xeb\x07 \x01(\x0b\x32\x18.zenbus_realtime.MissionH\x08\x12\x12\n\tx_matched\x18\xec\x07 \x03(\x05\x12*\n\x0bpos_matched\x18\xed\x07 \x03(\x0b\x32\x14.zenbus_realtime.Pos\x12\x1b\n\x12\x64istance_travelled\x18\xee\x07 \x01(\x05\x12!\n\x16seconds_after_midnight\x18\xf2\x07 \x01(\x05H\t\x12\x15\n\nutc_millis\x18\xf3\x07 \x01(\x03H\t\x1a\xc0\x02\n\x02Id\x12\x17\n\x0ftimetable_index\x18\x01 \x01(\x05\x12\x11\n\tcol_index\x18\x02 \x01(\x05\x12\x0f\n\x07trip_id\x18\t \x01(\t\x12\x12\n\x08yyyymmdd\x18\x03 \x01(\x05H\x00\x12\x36\n\ncalPattern\x18\x04 \x01(\x0b\x32 .zenbus_realtime.CalendarPatternH\x00\x12\x16\n\x0citinerary_id\x18\x05 \x01(\x03H\x01\x12/\n\titinerary\x18\x06 \x01(\x0b\x32\x1a.zenbus_realtime.ItineraryH\x01\x12\x16\n\x0ctimetable_id\x18\x07 \x01(\x03H\x01\x12/\n\ttimetable\x18\x08 \x01(\x0b\x32\x1a.zenbus_realtime.TimetableH\x01\x42\x10\n\x0eyyyymmdd_oneofB\r\n\x0btable_oneof\"+\n\nTripNature\x12\x08\n\x04NONE\x10\x00\x12\x08\n\x04LIVE\x10\x01\x12\t\n\x05STATS\x10\x02\x42\x17\n\x15\x63ol_index_or_id_oneofB\x10\n\x0eyyyymmdd_oneofB\x11\n\x0fitinerary_oneofB\x0f\n\rvehicle_oneofB\x11\n\x0ftimetable_oneofB\r\n\x0bshape_oneofB\x0c\n\nline_oneofB\x11\n\x0f\x63urrently_oneofB\x0f\n\rmission_oneofB\x11\n\x0ftimestamp_oneof\"\xc3\x01\n\tFrequency\x12&\n\x1cstart_seconds_after_midnight\x18\x12 \x01(\x05H\x00\x12\x1a\n\x10start_utc_millis\x18\x13 \x01(\x03H\x00\x12$\n\x1a\x65nd_seconds_after_midnight\x18\x14 \x01(\x05H\x01\x12\x18\n\x0e\x65nd_utc_millis\x18\x15 \x01(\x03H\x01\x12\x16\n\x0eperiod_seconds\x18\x16 \x01(\x05\x42\r\n\x0bstart_oneofB\x0b\n\tend_oneof\"\x16\n\x08Resource\x12\n\n\x02id\x18\x01 \x01(\x03\"\xd8\x08\n\x0bWallMessage\x12-\n\x08resource\x18\x01 \x01(\x0b\x32\x19.zenbus_realtime.ResourceH\x00\x12\x0f\n\x05\x61\x62out\x18\x65 \x01(\x03H\x00\x12\x0e\n\x06msg_id\x18\x02 \x01(\x03\x12\x33\n\x06target\x18\x03 \x01(\x0e\x32#.zenbus_realtime.WallMessage.Target\x12\x14\n\x0cnotify_start\x18\x04 \x01(\x03\x12\x12\n\nnotify_end\x18\x05 \x01(\x03\x12\x13\n\x0b\x65vent_start\x18\x06 \x01(\x03\x12\x11\n\tevent_end\x18\x07 \x01(\x03\x12\x0f\n\x07\x63reated\x18\x08 \x01(\x03\x12\x10\n\x08modified\x18\t \x01(\x03\x12\x0f\n\x07\x64\x65leted\x18\n \x01(\x03\x12\x31\n\x05\x63\x61use\x18\x0b \x01(\x0e\x32\".zenbus_realtime.WallMessage.Cause\x12\x33\n\x06\x65\x66\x66\x65\x63t\x18\x0c \x01(\x0e\x32#.zenbus_realtime.WallMessage.Effect\x12\x37\n\x08priority\x18\r \x01(\x0e\x32%.zenbus_realtime.WallMessage.Priority\x12\x0f\n\x07message\x18\x0e \x01(\t\x12\x15\n\rshort_message\x18\x0f \x01(\t\x12\x34\n\x06\x61uthor\x18\x10 \x01(\x0b\x32\".zenbus_realtime.WallMessageAuthorH\x01\x12\x13\n\tauthor_id\x18\x11 \x01(\x03H\x01\".\n\x06Target\x12\x0b\n\x07UNKNOWN\x10\x00\x12\r\n\tWORKSPACE\x10\x01\x12\x08\n\x04LINE\x10\x02\"\xf4\x01\n\x05\x43\x61use\x12\x11\n\rUNKNOWN_CAUSE\x10\x00\x12\x0f\n\x0bINFORMATION\x10\x01\x12\x15\n\x11TECHNICAL_PROBLEM\x10\x02\x12\n\n\x06STRIKE\x10\x03\x12\x11\n\rDEMONSTRATION\x10\x04\x12\x0c\n\x08\x41\x43\x43IDENT\x10\x05\x12\x0b\n\x07HOLIDAY\x10\x06\x12\x0b\n\x07WEATHER\x10\x07\x12\x0f\n\x0bMAINTENANCE\x10\x08\x12\x10\n\x0c\x43ONSTRUCTION\x10\t\x12\x13\n\x0fPOLICE_ACTIVITY\x10\n\x12\x15\n\x11MEDICAL_EMERGENCY\x10\x0b\x12\t\n\x05\x45VENT\x10\x0c\x12\x0f\n\x0bOTHER_CAUSE\x10\r\"\xb5\x01\n\x06\x45\x66\x66\x65\x63t\x12\x12\n\x0eUNKNOWN_EFFECT\x10\x00\x12\x0e\n\nNO_SERVICE\x10\x01\x12\x13\n\x0fREDUCED_SERVICE\x10\x02\x12\x16\n\x12SIGNIFICANT_DELAYS\x10\x03\x12\n\n\x06\x44\x45TOUR\x10\x04\x12\x16\n\x12\x41\x44\x44ITIONAL_SERVICE\x10\x05\x12\x14\n\x10MODIFIED_SERVICE\x10\x06\x12\x0e\n\nSTOP_MOVED\x10\x07\x12\x10\n\x0cOTHER_EFFECT\x10\x08\")\n\x08Priority\x12\x07\n\x03LOW\x10\x00\x12\n\n\x06MEDIUM\x10\x01\x12\x08\n\x04HIGH\x10\x02\x42\x10\n\x0eresource_oneofB\x0e\n\x0c\x61uthor_oneof\";\n\x11WallMessageAuthor\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04icon\x18\x03 \x01(\t*\xa1\x03\n\"JtfsScheduleRelationshipDescriptor\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x15\n\x11SCHEDULED_PLANNED\x10\x01\x12(\n$DEMAND_RESPONSIVE_NOT_BOOKED_PLANNED\x10\x02\x12$\n DEMAND_RESPONSIVE_BOOKED_PLANNED\x10\x03\x12 \n\x1c\x41UTO_ADHOC_TIMERANGE_PLANNED\x10\x04\x12\x15\n\x11\x46REQUENCY_PLANNED\x10\x05\x12\x12\n\x0eSCHEDULED_LIVE\x10\x64\x12\x0e\n\nADDED_LIVE\x10\x65\x12\x14\n\x10UNSCHEDULED_LIVE\x10\x66\x12\x11\n\rCANCELED_LIVE\x10g\x12\x14\n\x0f\x41UTO_ADHOC_LIVE\x10\xc8\x01\x12\x1b\n\x16\x44\x45MAND_RESPONSIVE_LIVE\x10\xc9\x01\x12\x11\n\x0cROAMING_LIVE\x10\xac\x02\x12\x16\n\x11NO_PASSENGER_LIVE\x10\x90\x03\x12\x11\n\x0cNO_TRIP_LIVE\x10\x91\x03\x12\x10\n\x0bSTATS_ADHOC\x10\xf4\x03*:\n\nTripStatus\x12\x08\n\x04NONE\x10\x00\x12\n\n\x06UNSURE\x10\x01\x12\x08\n\x04SURE\x10\x02\x12\x0c\n\x08\x41RCHIVED\x10\x03\x42\x15\n\x13net.zenbus.realtimeb\x06proto3')

_JTFSSCHEDULERELATIONSHIPDESCRIPTOR = DESCRIPTOR.enum_types_by_name['JtfsScheduleRelationshipDescriptor']
JtfsScheduleRelationshipDescriptor = enum_type_wrapper.EnumTypeWrapper(_JTFSSCHEDULERELATIONSHIPDESCRIPTOR)
_TRIPSTATUS = DESCRIPTOR.enum_types_by_name['TripStatus']
TripStatus = enum_type_wrapper.EnumTypeWrapper(_TRIPSTATUS)
UNKNOWN = 0
SCHEDULED_PLANNED = 1
DEMAND_RESPONSIVE_NOT_BOOKED_PLANNED = 2
DEMAND_RESPONSIVE_BOOKED_PLANNED = 3
AUTO_ADHOC_TIMERANGE_PLANNED = 4
FREQUENCY_PLANNED = 5
SCHEDULED_LIVE = 100
ADDED_LIVE = 101
UNSCHEDULED_LIVE = 102
CANCELED_LIVE = 103
AUTO_ADHOC_LIVE = 200
DEMAND_RESPONSIVE_LIVE = 201
ROAMING_LIVE = 300
NO_PASSENGER_LIVE = 400
NO_TRIP_LIVE = 401
STATS_ADHOC = 500
NONE = 0
UNSURE = 1
SURE = 2
ARCHIVED = 3


_LIVEMESSAGE = DESCRIPTOR.message_types_by_name['LiveMessage']
_STATICMESSAGE = DESCRIPTOR.message_types_by_name['StaticMessage']
_STOPMONITORINGMESSAGE = DESCRIPTOR.message_types_by_name['StopMonitoringMessage']
_PASSENGERINFORMATIONTERMINALMESSAGE = DESCRIPTOR.message_types_by_name['PassengerInformationTerminalMessage']
_PASSENGERINFORMATIONTERMINALMESSAGE_PITMAPCONFIG = _PASSENGERINFORMATIONTERMINALMESSAGE.nested_types_by_name['PITMapConfig']
_PASSENGERINFORMATIONTERMINALMESSAGE_PITDISPLAYCONFIG = _PASSENGERINFORMATIONTERMINALMESSAGE.nested_types_by_name['PITDisplayConfig']
_DIAGNOSTICMESSAGE = DESCRIPTOR.message_types_by_name['DiagnosticMessage']
_WALLMESSAGES = DESCRIPTOR.message_types_by_name['WallMessages']
_SINGLEPROVIDERPOST = DESCRIPTOR.message_types_by_name['SingleProviderPost']
_DAILYSTOPTIMES = DESCRIPTOR.message_types_by_name['DailyStopTimes']
_ABOUTVEHICLE = DESCRIPTOR.message_types_by_name['AboutVehicle']
_POINT = DESCRIPTOR.message_types_by_name['Point']
_POS = DESCRIPTOR.message_types_by_name['Pos']
_VEHICLE = DESCRIPTOR.message_types_by_name['Vehicle']
_VEHICLE_REFERENCE = _VEHICLE.nested_types_by_name['Reference']
_BLOCK = DESCRIPTOR.message_types_by_name['Block']
_PROVIDER = DESCRIPTOR.message_types_by_name['Provider']
_PROVIDER_REFERENCE = _PROVIDER.nested_types_by_name['Reference']
_PROVIDERBATTERY = DESCRIPTOR.message_types_by_name['ProviderBattery']
_PROVIDERCONFIG = DESCRIPTOR.message_types_by_name['ProviderConfig']
_PROVIDEREVENT = DESCRIPTOR.message_types_by_name['ProviderEvent']
_PROVIDERLATENCY = DESCRIPTOR.message_types_by_name['ProviderLatency']
_PROVIDERLATENCY_LATENCY = _PROVIDERLATENCY.nested_types_by_name['Latency']
_STOP = DESCRIPTOR.message_types_by_name['Stop']
_STOP_REFERENCE = _STOP.nested_types_by_name['Reference']
_STOP_ANCHOR = _STOP.nested_types_by_name['Anchor']
_MISSION = DESCRIPTOR.message_types_by_name['Mission']
_MISSION_REFERENCE = _MISSION.nested_types_by_name['Reference']
_SHAPE = DESCRIPTOR.message_types_by_name['Shape']
_SHAPE_REFERENCE = _SHAPE.nested_types_by_name['Reference']
_SHAPE_SEGMENTS = _SHAPE.nested_types_by_name['Segments']
_SHAPE_POINTS = _SHAPE.nested_types_by_name['Points']
_ITINERARY = DESCRIPTOR.message_types_by_name['Itinerary']
_ITINERARY_REFERENCE = _ITINERARY.nested_types_by_name['Reference']
_LINE = DESCRIPTOR.message_types_by_name['Line']
_LINE_REFERENCE = _LINE.nested_types_by_name['Reference']
_CALENDARPATTERN = DESCRIPTOR.message_types_by_name['CalendarPattern']
_TIMETABLE = DESCRIPTOR.message_types_by_name['Timetable']
_COUNTGROUP = DESCRIPTOR.message_types_by_name['CountGroup']
_STOPTIME = DESCRIPTOR.message_types_by_name['StopTime']
_STOPTIME_COUNTEVENT = _STOPTIME.nested_types_by_name['CountEvent']
_STOPTIME_PASSENGERSBOARDINGANDLEAVING = _STOPTIME.nested_types_by_name['PassengersBoardingAndLeaving']
_STOPTIME_PASSENGERTOTAL = _STOPTIME.nested_types_by_name['PassengerTotal']
_TRIPEVENT = DESCRIPTOR.message_types_by_name['TripEvent']
_DECLARATIONEVENT = DESCRIPTOR.message_types_by_name['DeclarationEvent']
_RESOLVEDDECLARATIONEVENT = DESCRIPTOR.message_types_by_name['ResolvedDeclarationEvent']
_TRIPCOLUMN = DESCRIPTOR.message_types_by_name['TripColumn']
_TRIPCOLUMN_ID = _TRIPCOLUMN.nested_types_by_name['Id']
_FREQUENCY = DESCRIPTOR.message_types_by_name['Frequency']
_RESOURCE = DESCRIPTOR.message_types_by_name['Resource']
_WALLMESSAGE = DESCRIPTOR.message_types_by_name['WallMessage']
_WALLMESSAGEAUTHOR = DESCRIPTOR.message_types_by_name['WallMessageAuthor']
_PROVIDER_TYPE = _PROVIDER.enum_types_by_name['Type']
_STOP_TYPE = _STOP.enum_types_by_name['Type']
_STOP_WHEELCHAIRBOARDING = _STOP.enum_types_by_name['WheelchairBoarding']
_LINE_TYPE = _LINE.enum_types_by_name['Type']
_STOPTIME_OCCUPANCYSTATUS = _STOPTIME.enum_types_by_name['OccupancyStatus']
_TRIPEVENT_TYPE = _TRIPEVENT.enum_types_by_name['Type']
_RESOLVEDDECLARATIONEVENT_STATE = _RESOLVEDDECLARATIONEVENT.enum_types_by_name['State']
_TRIPCOLUMN_TRIPNATURE = _TRIPCOLUMN.enum_types_by_name['TripNature']
_WALLMESSAGE_TARGET = _WALLMESSAGE.enum_types_by_name['Target']
_WALLMESSAGE_CAUSE = _WALLMESSAGE.enum_types_by_name['Cause']
_WALLMESSAGE_EFFECT = _WALLMESSAGE.enum_types_by_name['Effect']
_WALLMESSAGE_PRIORITY = _WALLMESSAGE.enum_types_by_name['Priority']
LiveMessage = _reflection.GeneratedProtocolMessageType('LiveMessage', (_message.Message,), {
  'DESCRIPTOR' : _LIVEMESSAGE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.LiveMessage)
  })
_sym_db.RegisterMessage(LiveMessage)

StaticMessage = _reflection.GeneratedProtocolMessageType('StaticMessage', (_message.Message,), {
  'DESCRIPTOR' : _STATICMESSAGE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.StaticMessage)
  })
_sym_db.RegisterMessage(StaticMessage)

StopMonitoringMessage = _reflection.GeneratedProtocolMessageType('StopMonitoringMessage', (_message.Message,), {
  'DESCRIPTOR' : _STOPMONITORINGMESSAGE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.StopMonitoringMessage)
  })
_sym_db.RegisterMessage(StopMonitoringMessage)

PassengerInformationTerminalMessage = _reflection.GeneratedProtocolMessageType('PassengerInformationTerminalMessage', (_message.Message,), {

  'PITMapConfig' : _reflection.GeneratedProtocolMessageType('PITMapConfig', (_message.Message,), {
    'DESCRIPTOR' : _PASSENGERINFORMATIONTERMINALMESSAGE_PITMAPCONFIG,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.PassengerInformationTerminalMessage.PITMapConfig)
    })
  ,

  'PITDisplayConfig' : _reflection.GeneratedProtocolMessageType('PITDisplayConfig', (_message.Message,), {
    'DESCRIPTOR' : _PASSENGERINFORMATIONTERMINALMESSAGE_PITDISPLAYCONFIG,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.PassengerInformationTerminalMessage.PITDisplayConfig)
    })
  ,
  'DESCRIPTOR' : _PASSENGERINFORMATIONTERMINALMESSAGE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.PassengerInformationTerminalMessage)
  })
_sym_db.RegisterMessage(PassengerInformationTerminalMessage)
_sym_db.RegisterMessage(PassengerInformationTerminalMessage.PITMapConfig)
_sym_db.RegisterMessage(PassengerInformationTerminalMessage.PITDisplayConfig)

DiagnosticMessage = _reflection.GeneratedProtocolMessageType('DiagnosticMessage', (_message.Message,), {
  'DESCRIPTOR' : _DIAGNOSTICMESSAGE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.DiagnosticMessage)
  })
_sym_db.RegisterMessage(DiagnosticMessage)

WallMessages = _reflection.GeneratedProtocolMessageType('WallMessages', (_message.Message,), {
  'DESCRIPTOR' : _WALLMESSAGES,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.WallMessages)
  })
_sym_db.RegisterMessage(WallMessages)

SingleProviderPost = _reflection.GeneratedProtocolMessageType('SingleProviderPost', (_message.Message,), {
  'DESCRIPTOR' : _SINGLEPROVIDERPOST,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.SingleProviderPost)
  })
_sym_db.RegisterMessage(SingleProviderPost)

DailyStopTimes = _reflection.GeneratedProtocolMessageType('DailyStopTimes', (_message.Message,), {
  'DESCRIPTOR' : _DAILYSTOPTIMES,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.DailyStopTimes)
  })
_sym_db.RegisterMessage(DailyStopTimes)

AboutVehicle = _reflection.GeneratedProtocolMessageType('AboutVehicle', (_message.Message,), {
  'DESCRIPTOR' : _ABOUTVEHICLE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.AboutVehicle)
  })
_sym_db.RegisterMessage(AboutVehicle)

Point = _reflection.GeneratedProtocolMessageType('Point', (_message.Message,), {
  'DESCRIPTOR' : _POINT,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Point)
  })
_sym_db.RegisterMessage(Point)

Pos = _reflection.GeneratedProtocolMessageType('Pos', (_message.Message,), {
  'DESCRIPTOR' : _POS,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Pos)
  })
_sym_db.RegisterMessage(Pos)

Vehicle = _reflection.GeneratedProtocolMessageType('Vehicle', (_message.Message,), {

  'Reference' : _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
    'DESCRIPTOR' : _VEHICLE_REFERENCE,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Vehicle.Reference)
    })
  ,
  'DESCRIPTOR' : _VEHICLE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Vehicle)
  })
_sym_db.RegisterMessage(Vehicle)
_sym_db.RegisterMessage(Vehicle.Reference)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Block)
  })
_sym_db.RegisterMessage(Block)

Provider = _reflection.GeneratedProtocolMessageType('Provider', (_message.Message,), {

  'Reference' : _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
    'DESCRIPTOR' : _PROVIDER_REFERENCE,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Provider.Reference)
    })
  ,
  'DESCRIPTOR' : _PROVIDER,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Provider)
  })
_sym_db.RegisterMessage(Provider)
_sym_db.RegisterMessage(Provider.Reference)

ProviderBattery = _reflection.GeneratedProtocolMessageType('ProviderBattery', (_message.Message,), {
  'DESCRIPTOR' : _PROVIDERBATTERY,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.ProviderBattery)
  })
_sym_db.RegisterMessage(ProviderBattery)

ProviderConfig = _reflection.GeneratedProtocolMessageType('ProviderConfig', (_message.Message,), {
  'DESCRIPTOR' : _PROVIDERCONFIG,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.ProviderConfig)
  })
_sym_db.RegisterMessage(ProviderConfig)

ProviderEvent = _reflection.GeneratedProtocolMessageType('ProviderEvent', (_message.Message,), {
  'DESCRIPTOR' : _PROVIDEREVENT,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.ProviderEvent)
  })
_sym_db.RegisterMessage(ProviderEvent)

ProviderLatency = _reflection.GeneratedProtocolMessageType('ProviderLatency', (_message.Message,), {

  'Latency' : _reflection.GeneratedProtocolMessageType('Latency', (_message.Message,), {
    'DESCRIPTOR' : _PROVIDERLATENCY_LATENCY,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.ProviderLatency.Latency)
    })
  ,
  'DESCRIPTOR' : _PROVIDERLATENCY,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.ProviderLatency)
  })
_sym_db.RegisterMessage(ProviderLatency)
_sym_db.RegisterMessage(ProviderLatency.Latency)

Stop = _reflection.GeneratedProtocolMessageType('Stop', (_message.Message,), {

  'Reference' : _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
    'DESCRIPTOR' : _STOP_REFERENCE,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Stop.Reference)
    })
  ,

  'Anchor' : _reflection.GeneratedProtocolMessageType('Anchor', (_message.Message,), {
    'DESCRIPTOR' : _STOP_ANCHOR,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Stop.Anchor)
    })
  ,
  'DESCRIPTOR' : _STOP,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Stop)
  })
_sym_db.RegisterMessage(Stop)
_sym_db.RegisterMessage(Stop.Reference)
_sym_db.RegisterMessage(Stop.Anchor)

Mission = _reflection.GeneratedProtocolMessageType('Mission', (_message.Message,), {

  'Reference' : _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
    'DESCRIPTOR' : _MISSION_REFERENCE,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Mission.Reference)
    })
  ,
  'DESCRIPTOR' : _MISSION,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Mission)
  })
_sym_db.RegisterMessage(Mission)
_sym_db.RegisterMessage(Mission.Reference)

Shape = _reflection.GeneratedProtocolMessageType('Shape', (_message.Message,), {

  'Reference' : _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
    'DESCRIPTOR' : _SHAPE_REFERENCE,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Shape.Reference)
    })
  ,

  'Segments' : _reflection.GeneratedProtocolMessageType('Segments', (_message.Message,), {
    'DESCRIPTOR' : _SHAPE_SEGMENTS,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Shape.Segments)
    })
  ,

  'Points' : _reflection.GeneratedProtocolMessageType('Points', (_message.Message,), {
    'DESCRIPTOR' : _SHAPE_POINTS,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Shape.Points)
    })
  ,
  'DESCRIPTOR' : _SHAPE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Shape)
  })
_sym_db.RegisterMessage(Shape)
_sym_db.RegisterMessage(Shape.Reference)
_sym_db.RegisterMessage(Shape.Segments)
_sym_db.RegisterMessage(Shape.Points)

Itinerary = _reflection.GeneratedProtocolMessageType('Itinerary', (_message.Message,), {

  'Reference' : _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
    'DESCRIPTOR' : _ITINERARY_REFERENCE,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Itinerary.Reference)
    })
  ,
  'DESCRIPTOR' : _ITINERARY,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Itinerary)
  })
_sym_db.RegisterMessage(Itinerary)
_sym_db.RegisterMessage(Itinerary.Reference)

Line = _reflection.GeneratedProtocolMessageType('Line', (_message.Message,), {

  'Reference' : _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
    'DESCRIPTOR' : _LINE_REFERENCE,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.Line.Reference)
    })
  ,
  'DESCRIPTOR' : _LINE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Line)
  })
_sym_db.RegisterMessage(Line)
_sym_db.RegisterMessage(Line.Reference)

CalendarPattern = _reflection.GeneratedProtocolMessageType('CalendarPattern', (_message.Message,), {
  'DESCRIPTOR' : _CALENDARPATTERN,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.CalendarPattern)
  })
_sym_db.RegisterMessage(CalendarPattern)

Timetable = _reflection.GeneratedProtocolMessageType('Timetable', (_message.Message,), {
  'DESCRIPTOR' : _TIMETABLE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Timetable)
  })
_sym_db.RegisterMessage(Timetable)

CountGroup = _reflection.GeneratedProtocolMessageType('CountGroup', (_message.Message,), {
  'DESCRIPTOR' : _COUNTGROUP,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.CountGroup)
  })
_sym_db.RegisterMessage(CountGroup)

StopTime = _reflection.GeneratedProtocolMessageType('StopTime', (_message.Message,), {

  'CountEvent' : _reflection.GeneratedProtocolMessageType('CountEvent', (_message.Message,), {
    'DESCRIPTOR' : _STOPTIME_COUNTEVENT,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.StopTime.CountEvent)
    })
  ,

  'PassengersBoardingAndLeaving' : _reflection.GeneratedProtocolMessageType('PassengersBoardingAndLeaving', (_message.Message,), {
    'DESCRIPTOR' : _STOPTIME_PASSENGERSBOARDINGANDLEAVING,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.StopTime.PassengersBoardingAndLeaving)
    })
  ,

  'PassengerTotal' : _reflection.GeneratedProtocolMessageType('PassengerTotal', (_message.Message,), {
    'DESCRIPTOR' : _STOPTIME_PASSENGERTOTAL,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.StopTime.PassengerTotal)
    })
  ,
  'DESCRIPTOR' : _STOPTIME,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.StopTime)
  })
_sym_db.RegisterMessage(StopTime)
_sym_db.RegisterMessage(StopTime.CountEvent)
_sym_db.RegisterMessage(StopTime.PassengersBoardingAndLeaving)
_sym_db.RegisterMessage(StopTime.PassengerTotal)

TripEvent = _reflection.GeneratedProtocolMessageType('TripEvent', (_message.Message,), {
  'DESCRIPTOR' : _TRIPEVENT,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.TripEvent)
  })
_sym_db.RegisterMessage(TripEvent)

DeclarationEvent = _reflection.GeneratedProtocolMessageType('DeclarationEvent', (_message.Message,), {
  'DESCRIPTOR' : _DECLARATIONEVENT,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.DeclarationEvent)
  })
_sym_db.RegisterMessage(DeclarationEvent)

ResolvedDeclarationEvent = _reflection.GeneratedProtocolMessageType('ResolvedDeclarationEvent', (_message.Message,), {
  'DESCRIPTOR' : _RESOLVEDDECLARATIONEVENT,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.ResolvedDeclarationEvent)
  })
_sym_db.RegisterMessage(ResolvedDeclarationEvent)

TripColumn = _reflection.GeneratedProtocolMessageType('TripColumn', (_message.Message,), {

  'Id' : _reflection.GeneratedProtocolMessageType('Id', (_message.Message,), {
    'DESCRIPTOR' : _TRIPCOLUMN_ID,
    '__module__' : 'zenbus_pb2'
    # @@protoc_insertion_point(class_scope:zenbus_realtime.TripColumn.Id)
    })
  ,
  'DESCRIPTOR' : _TRIPCOLUMN,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.TripColumn)
  })
_sym_db.RegisterMessage(TripColumn)
_sym_db.RegisterMessage(TripColumn.Id)

Frequency = _reflection.GeneratedProtocolMessageType('Frequency', (_message.Message,), {
  'DESCRIPTOR' : _FREQUENCY,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Frequency)
  })
_sym_db.RegisterMessage(Frequency)

Resource = _reflection.GeneratedProtocolMessageType('Resource', (_message.Message,), {
  'DESCRIPTOR' : _RESOURCE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.Resource)
  })
_sym_db.RegisterMessage(Resource)

WallMessage = _reflection.GeneratedProtocolMessageType('WallMessage', (_message.Message,), {
  'DESCRIPTOR' : _WALLMESSAGE,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.WallMessage)
  })
_sym_db.RegisterMessage(WallMessage)

WallMessageAuthor = _reflection.GeneratedProtocolMessageType('WallMessageAuthor', (_message.Message,), {
  'DESCRIPTOR' : _WALLMESSAGEAUTHOR,
  '__module__' : 'zenbus_pb2'
  # @@protoc_insertion_point(class_scope:zenbus_realtime.WallMessageAuthor)
  })
_sym_db.RegisterMessage(WallMessageAuthor)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\023net.zenbus.realtime'
  _JTFSSCHEDULERELATIONSHIPDESCRIPTOR._serialized_start=14900
  _JTFSSCHEDULERELATIONSHIPDESCRIPTOR._serialized_end=15317
  _TRIPSTATUS._serialized_start=15319
  _TRIPSTATUS._serialized_end=15377
  _LIVEMESSAGE._serialized_start=34
  _LIVEMESSAGE._serialized_end=258
  _STATICMESSAGE._serialized_start=261
  _STATICMESSAGE._serialized_end=591
  _STOPMONITORINGMESSAGE._serialized_start=594
  _STOPMONITORINGMESSAGE._serialized_end=784
  _PASSENGERINFORMATIONTERMINALMESSAGE._serialized_start=787
  _PASSENGERINFORMATIONTERMINALMESSAGE._serialized_end=1507
  _PASSENGERINFORMATIONTERMINALMESSAGE_PITMAPCONFIG._serialized_start=1120
  _PASSENGERINFORMATIONTERMINALMESSAGE_PITMAPCONFIG._serialized_end=1274
  _PASSENGERINFORMATIONTERMINALMESSAGE_PITDISPLAYCONFIG._serialized_start=1277
  _PASSENGERINFORMATIONTERMINALMESSAGE_PITDISPLAYCONFIG._serialized_end=1507
  _DIAGNOSTICMESSAGE._serialized_start=1510
  _DIAGNOSTICMESSAGE._serialized_end=1801
  _WALLMESSAGES._serialized_start=1804
  _WALLMESSAGES._serialized_end=1936
  _SINGLEPROVIDERPOST._serialized_start=1939
  _SINGLEPROVIDERPOST._serialized_end=2264
  _DAILYSTOPTIMES._serialized_start=2267
  _DAILYSTOPTIMES._serialized_end=2438
  _ABOUTVEHICLE._serialized_start=2441
  _ABOUTVEHICLE._serialized_end=2623
  _POINT._serialized_start=2625
  _POINT._serialized_end=2669
  _POS._serialized_start=2672
  _POS._serialized_end=2912
  _VEHICLE._serialized_start=2915
  _VEHICLE._serialized_end=3326
  _VEHICLE_REFERENCE._serialized_start=3208
  _VEHICLE_REFERENCE._serialized_end=3303
  _BLOCK._serialized_start=3329
  _BLOCK._serialized_end=3462
  _PROVIDER._serialized_start=3465
  _PROVIDER._serialized_end=4097
  _PROVIDER_REFERENCE._serialized_start=3826
  _PROVIDER_REFERENCE._serialized_end=3925
  _PROVIDER_TYPE._serialized_start=3928
  _PROVIDER_TYPE._serialized_end=4097
  _PROVIDERBATTERY._serialized_start=4099
  _PROVIDERBATTERY._serialized_end=4225
  _PROVIDERCONFIG._serialized_start=4228
  _PROVIDERCONFIG._serialized_end=4415
  _PROVIDEREVENT._serialized_start=4417
  _PROVIDEREVENT._serialized_end=4535
  _PROVIDERLATENCY._serialized_start=4538
  _PROVIDERLATENCY._serialized_end=4867
  _PROVIDERLATENCY_LATENCY._serialized_start=4652
  _PROVIDERLATENCY_LATENCY._serialized_end=4867
  _STOP._serialized_start=4870
  _STOP._serialized_end=5834
  _STOP_REFERENCE._serialized_start=5343
  _STOP_REFERENCE._serialized_end=5426
  _STOP_ANCHOR._serialized_start=5429
  _STOP_ANCHOR._serialized_end=5647
  _STOP_TYPE._serialized_start=5649
  _STOP_TYPE._serialized_end=5749
  _STOP_WHEELCHAIRBOARDING._serialized_start=5751
  _STOP_WHEELCHAIRBOARDING._serialized_end=5818
  _MISSION._serialized_start=5837
  _MISSION._serialized_end=6181
  _MISSION_REFERENCE._serialized_start=6071
  _MISSION_REFERENCE._serialized_end=6166
  _SHAPE._serialized_start=6184
  _SHAPE._serialized_end=6672
  _SHAPE_REFERENCE._serialized_start=6432
  _SHAPE_REFERENCE._serialized_end=6519
  _SHAPE_SEGMENTS._serialized_start=6521
  _SHAPE_SEGMENTS._serialized_end=6590
  _SHAPE_POINTS._serialized_start=6592
  _SHAPE_POINTS._serialized_end=6639
  _ITINERARY._serialized_start=6675
  _ITINERARY._serialized_end=6950
  _ITINERARY_REFERENCE._serialized_start=6833
  _ITINERARY_REFERENCE._serialized_end=6936
  _LINE._serialized_start=6953
  _LINE._serialized_end=7361
  _LINE_REFERENCE._serialized_start=7177
  _LINE_REFERENCE._serialized_end=7260
  _LINE_TYPE._serialized_start=7262
  _LINE_TYPE._serialized_end=7361
  _CALENDARPATTERN._serialized_start=7363
  _CALENDARPATTERN._serialized_end=7398
  _TIMETABLE._serialized_start=7401
  _TIMETABLE._serialized_end=7683
  _COUNTGROUP._serialized_start=7685
  _COUNTGROUP._serialized_end=7735
  _STOPTIME._serialized_start=7738
  _STOPTIME._serialized_end=9200
  _STOPTIME_COUNTEVENT._serialized_start=8379
  _STOPTIME_COUNTEVENT._serialized_end=8777
  _STOPTIME_PASSENGERSBOARDINGANDLEAVING._serialized_start=8779
  _STOPTIME_PASSENGERSBOARDINGANDLEAVING._serialized_end=8866
  _STOPTIME_PASSENGERTOTAL._serialized_start=8868
  _STOPTIME_PASSENGERTOTAL._serialized_end=8938
  _STOPTIME_OCCUPANCYSTATUS._serialized_start=8941
  _STOPTIME_OCCUPANCYSTATUS._serialized_end=9129
  _TRIPEVENT._serialized_start=9203
  _TRIPEVENT._serialized_end=9999
  _TRIPEVENT_TYPE._serialized_start=9872
  _TRIPEVENT_TYPE._serialized_end=9916
  _DECLARATIONEVENT._serialized_start=10002
  _DECLARATIONEVENT._serialized_end=10979
  _RESOLVEDDECLARATIONEVENT._serialized_start=10982
  _RESOLVEDDECLARATIONEVENT._serialized_end=11457
  _RESOLVEDDECLARATIONEVENT_STATE._serialized_start=11231
  _RESOLVEDDECLARATIONEVENT_STATE._serialized_end=11438
  _TRIPCOLUMN._serialized_start=11460
  _TRIPCOLUMN._serialized_end=13499
  _TRIPCOLUMN_ID._serialized_start=12952
  _TRIPCOLUMN_ID._serialized_end=13272
  _TRIPCOLUMN_TRIPNATURE._serialized_start=13274
  _TRIPCOLUMN_TRIPNATURE._serialized_end=13317
  _FREQUENCY._serialized_start=13502
  _FREQUENCY._serialized_end=13697
  _RESOURCE._serialized_start=13699
  _RESOURCE._serialized_end=13721
  _WALLMESSAGE._serialized_start=13724
  _WALLMESSAGE._serialized_end=14836
  _WALLMESSAGE_TARGET._serialized_start=14282
  _WALLMESSAGE_TARGET._serialized_end=14328
  _WALLMESSAGE_CAUSE._serialized_start=14331
  _WALLMESSAGE_CAUSE._serialized_end=14575
  _WALLMESSAGE_EFFECT._serialized_start=14578
  _WALLMESSAGE_EFFECT._serialized_end=14759
  _WALLMESSAGE_PRIORITY._serialized_start=14761
  _WALLMESSAGE_PRIORITY._serialized_end=14802
  _WALLMESSAGEAUTHOR._serialized_start=14838
  _WALLMESSAGEAUTHOR._serialized_end=14897
# @@protoc_insertion_point(module_scope)
